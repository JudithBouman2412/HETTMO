% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_plotting_functions.R
\name{plot_fitsim_strat_realdata}
\alias{plot_fitsim_strat_realdata}
\title{#' plot_fitsim_strat
#'
#' Function that produces Figure to visualize stratified model fit to simulated data.
#'
#' @param fit fit of stratified model, result of "sampling_model"
#' @param sim_data array of simulated positive PCR cases per week and age-class.
#' @param params list of parameters used to simulate the data, result of "set_parameters".
#' @param transmission_prob_sim array of simulated rho value per week per age-class.
#'
#' @return Figure of result of simulated, stratified model.
#' @export
#'
#' @examples
plot_fitsim_strat = function(fit, sim_data, params=params, transmission_prob_sim) {}
\usage{
plot_fitsim_strat_realdata(fit, data, cum_inc, seroprev)
}
\arguments{
\item{fit}{modelfit of stratified model, result of "sampling_model"}

\item{data}{data to which model was fit, array with value per week and age-class}

\item{cum_inc}{vector of cumulative incidence over time}

\item{seroprev}{seroprevalence data used for model fit}
}
\value{
Figure
}
\description{
#' plot_fitsim_strat
#'
#' Function that produces Figure to visualize stratified model fit to simulated data.
#'
#' @param fit fit of stratified model, result of "sampling_model"
#' @param sim_data array of simulated positive PCR cases per week and age-class.
#' @param params list of parameters used to simulate the data, result of "set_parameters".
#' @param transmission_prob_sim array of simulated rho value per week per age-class.
#'
#' @return Figure of result of simulated, stratified model.
#' @export
#'
#' @examples
plot_fitsim_strat = function(fit, sim_data, params=params, transmission_prob_sim) {
}
\section{aesthetics}{
ggplot2::theme_set(ggplot2::theme_bw())
bayesplot::color_scheme_set("teal")
col_prior = "grey70"
col_post = "orange"
col_simul = "cyan3"
}

\section{posterior predictive check}{
dat_ = data.frame(variable = "I_t_simulated", time = 1:dim(sim_data)\link{1}, null = "", median = sim_data )
post_ = fit$samples_posterior$summary(c("I_t_predicted")) |>
tidyr::separate(variable,"\[|\]",into=c("variable","step", "NULL")) |>
tidyr::separate(step,",",into=c("age_group","time"))
prior_ = fit$samples_prior$summary(c("I_t_predicted")) |>
tidyr::separate(variable,"\[|\]",into=c("variable","step", "NULL")) |>
tidyr::separate(step,",",into=c("age_group","time"))

g1 = ggplot() +
#geom_ribbon(data=post_ |>  filter(age_group==2), aes(x=as.numeric(time),ymin=q5,ymax=q95,fill="Prior predictive check"),alpha=.3) +
geom_ribbon(data=post_ |>  filter(age_group==1), aes(x=as.numeric(time),ymin=q5,ymax=q95,fill="Age group 1"),alpha=.3) +
geom_line(data=post_ |>  filter(age_group==1),aes(x=as.numeric(time),y=median,colour="Age group 1")) +
geom_ribbon(data=post_ |>  filter(age_group==2), aes(x=as.numeric(time),ymin=q5,ymax=q95,fill="Age group 2"),alpha=.3) +
geom_line(data=post_ |>  filter(age_group==2),aes(x=as.numeric(time),y=median,colour="Age group 2")) +
geom_ribbon(data=post_ |>  filter(age_group==3), aes(x=as.numeric(time),ymin=q5,ymax=q95,fill="Age group 3"),alpha=.3) +
geom_line(data=post_ |>  filter(age_group==3),aes(x=as.numeric(time),y=median,colour="Age group 3")) +
geom_point(data=dat_ ,aes(x=as.numeric(time),y=median.1, colour="Age group 1")) +
geom_point(data=dat_ ,aes(x=as.numeric(time),y=median.2, colour="Age group 2")) +
geom_point(data=dat_ ,aes(x=as.numeric(time),y=median.3, colour="Age group 3")) +
scale_fill_manual(values=c("Age group 1"=col_simul,
"Age group 2"="orange",
"Age group 3"="red")) +
scale_colour_manual(values=c("Age group 1"=col_simul,
"Age group 2"="orange",
"Age group 3"="red" )) +
#scale_y_continuous(trans='log10') +
labs(x="Time (weeks)",y="PCR confirmed cases per week",colour=NULL,fill=NULL) +
theme(legend.position = "none", text=element_text(size=16))
}

\section{compare prior, data and posterior}{

}

